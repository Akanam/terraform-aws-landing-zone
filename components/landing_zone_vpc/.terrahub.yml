component:
  name: landing_zone_vpc
  template:
    terraform:
      backend:
        local:
          path: '${tfvar.terrahub["tfstate_path"]}/landing_zone_vpc/terraform.tfstate'
    resource:
      aws_vpc:
        landing_zone_vpc:
          provider: '${tfvar.terrahub["provider_alias"]}'
          count: '${length(var.landing_zone_vpc_names)}'
          cidr_block: '${element(var.landing_zone_vpc_cidr_blocks, count.index)}'
          tags: >-
            ${merge(var.landing_zone_vpc_tags, map("Name",
            "${element(var.landing_zone_vpc_names, count.index)}"))}
          instance_tenancy: '${element(var.landing_zone_vpc_instance_tenancies, count.index)}'
          enable_dns_support: '${element(var.landing_zone_vpc_enable_dns_supports, count.index)}'
          assign_generated_ipv6_cidr_block: >-
            ${element(var.landing_zone_vpc_assign_generated_ipv6_cidr_blocks,
            count.index)}
          enable_classiclink: '${element(var.landing_zone_vpc_enable_classiclinks, count.index)}'
          enable_dns_hostnames: '${element(var.landing_zone_vpc_enable_dns_hostnames, count.index)}'
          enable_classiclink_dns_support: >-
            ${element(var.landing_zone_vpc_enable_classiclink_dns_supports,
            count.index)}
    output:
      ids:
        value: '${aws_vpc.landing_zone_vpc.*.id}'
      thub_ids:
        value: '${aws_vpc.landing_zone_vpc.*.id}'
      arns:
        value: '${aws_vpc.landing_zone_vpc.*.arn}'
      landing_zone_vpc_ids:
        value: '${aws_vpc.landing_zone_vpc.*.id}'
      landing_zone_vpc_arns:
        value: '${aws_vpc.landing_zone_vpc.*.arn}'
terraform:
  varFile:
    - ../mitocgroup_tfvars/landing_zone_vpc/default.tfvars
