component:
  name: landing_zone_route
  dependsOn:
    - ../landing_zone_route_table
    - ../landing_zone_route_table_association
  template:
    terraform:
      backend:
        local:
          path: >-
            ${tfvar.terrahub["tfstate_path"]}/landing_zone_route/terraform.tfstate
    data:
      aws_vpc:
        selected:
          provider: '${tfvar.terrahub["provider_alias"]}'
          count: '${length(var.landing_zone_vpc_cidr_blocks)}'
          cidr_block: '${element(var.landing_zone_vpc_cidr_blocks, count.index)}'
      aws_subnet:
        selected:
          provider: '${tfvar.terrahub["provider_alias"]}'
          count: '${length(var.landing_zone_subnet_cidr_blocks)}'
          cidr_block: '${element(var.landing_zone_subnet_cidr_blocks, count.index)}'
          vpc_id: '${element(data.aws_vpc.selected.*.id, count.index)}'
      aws_route_table:
        selected:
          provider: '${tfvar.terrahub["provider_alias"]}'
          count: '${length(data.aws_subnet.selected.*.id)}'
          subnet_id: '${element(data.aws_subnet.selected.*.id, count.index)}'
    resource:
      aws_route:
        landing_zone_route:
          provider: '${tfvar.terrahub["provider_alias"]}'
          count: >-
            ${length(distinct(data.aws_route_table.selected.*.id)) *
            length(var.landing_zone_route_destination_cidr_blocks)}
          route_table_id: >-
            ${element(distinct(data.aws_route_table.selected.*.id),
            count.index)}
          destination_cidr_block: >-
            ${element(var.landing_zone_route_destination_cidr_blocks,
            count.index)}
    output:
      ids:
        value: '${aws_route.landing_zone_route.*.id}'
      thub_ids:
        value: '${aws_route.landing_zone_route.*.id}'
      landing_zone_route_ids:
        value: '${aws_route.landing_zone_route.*.id}'
terraform:
  varFile:
    - ../mitocgroup_tfvars/landing_zone_route/default.tfvars
