component:
  name: landing_zone_eip
  template:
    terraform:
      backend:
        local:
          path: '${tfvar.terrahub["tfstate_path"]}/landing_zone_eip/terraform.tfstate'
    resource:
      aws_eip:
        landing_zone_eip:
          provider: '${tfvar.terrahub["provider_alias"]}'
          count: '${var.landing_zone_eip_names}'
          tags: >-
            ${merge(var.landing_zone_eip_tags, map("Name",
            "${element(var.landing_zone_eip_names, count.index)}"))}
          vpc: '${var.landing_zone_eip_vpc}'
    output:
      ids:
        value: '${aws_eip.landing_zone_eip.*.id}'
      thub_ids:
        value: '${aws_eip.landing_zone_eip.*.id}'
      public_ips:
        value: '${aws_eip.landing_zone_eip.*.public_ip}'
      landing_zone_eip_ids:
        value: '${aws_eip.landing_zone_eip.*.id}'
      landing_zone_eip_public_ips:
        value: '${aws_eip.landing_zone_eip.*.public_ip}'
terraform:
  varFile:
    - ../mitocgroup_tfvars/landing_zone_eip/default.tfvars
